@using NeuRequest;
@using NeuRequest.Models;
@{

    UserProfile userProfileSession = ViewData["UserProfileSession"] as UserProfile;
    var userAceess = userProfileSession.userAccess;
    int adminUsers = userAceess.Where(x => (x.AccessDesc == "Root_Admin" || x.AccessDesc == "Hcm_Admin" || x.AccessDesc == "Hcm_User")).Count();
    List<UserRequestUiGridRender> userSelfRequests = ViewData["userRequestUiGridRenders"] as List<UserRequestUiGridRender>;
    List<UserRequestUiGridRender> userApprovalfRequests = ViewData["userRequestApproverUiGridRenders"] as List<UserRequestUiGridRender>;

    string statusRowString = "";
    string requestTypeString = "";

    ViewBag.Title = "HCM - ";
}
<!--<a href="/NeuUserManagement/Index">User Management</a>-->
<style>
    .update-card {
        background-color: #f3f3f3;
        font-size: .875em;
        overflow-x: hidden;
        color: #353c4e;
        font-family: "Open Sans",sans-serif;
        background-attachment: fixed;
        color: #fff;
        cursor: pointer;
    }

        .update-card.card {
            position: relative;
            display: -ms-flexbox;
            display: flex;
            -ms-flex-direction: column;
            flex-direction: column;
            min-width: 0;
            word-wrap: break-word;
            background-color: #fff;
            background-clip: border-box;
            border: 1px solid rgba(0,0,0,.125);
            border-radius: .25rem;
        }

        .update-card.card {
            border-radius: 5px;
            -webkit-box-shadow: 0 1px 20px 0 rgba(69,90,100,0.08);
            box-shadow: 0 1px 20px 0 rgba(69,90,100,0.08);
            border: none;
            margin-bottom: 30px;
        }

        .update-card .card-block {
            padding: 1.25rem;
        }

            .update-card .card-block h6 {
                font-size: 14px;
            }

        .update-card i.main-icon {
            font-size: xx-large;
            position: relative;
            z-index: 1;
        }

        .update-card .card-block .m-b-0 {
            margin-bottom: 0px;
        }

    .bg-c-yellow {
        background: -webkit-gradient(linear, left top, right top, from(#fe9365), to(#feb798));
        background: linear-gradient(to right, #fe9365, #feb798);
    }

    .bg-c-green {
        background: -webkit-gradient(linear, left top, right top, from(#0ac282), to(#0df3a3));
        background: linear-gradient(to right, #0ac282, #0df3a3);
    }

    .bg-c-pink {
        background: -webkit-gradient(linear, left top, right top, from(#fe5d70), to(#fe909d));
        background: linear-gradient(to right, #fe5d70, #fe909d);
    }

    .bg-c-lite-green {
        background: -webkit-gradient(linear, left top, right top, from(#01a9ac), to(#01dbdf));
        background: linear-gradient(to right, #01a9ac, #01dbdf);
    }

    .bg-c-lite-green-1 {
        background: rgba(210,255,82,1);
        background: -moz-linear-gradient(left, rgba(210,255,82,1) 0%, rgba(145,232,66,1) 100%);
        background: -webkit-gradient(left top, right top, color-stop(0%, rgba(210,255,82,1)), color-stop(100%, rgba(145,232,66,1)));
        background: -webkit-linear-gradient(left, rgba(210,255,82,1) 0%, rgba(145,232,66,1) 100%);
        background: -o-linear-gradient(left, rgba(210,255,82,1) 0%, rgba(145,232,66,1) 100%);
        background: -ms-linear-gradient(left, rgba(210,255,82,1) 0%, rgba(145,232,66,1) 100%);
        background: linear-gradient(to right, rgba(210,255,82,1) 0%, rgba(145,232,66,1) 100%);
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#d2ff52', endColorstr='#91e842', GradientType=1 );
    }

    .bg-c-dark-green-1 {
        background: rgba(164,179,87,1);
        background: -moz-linear-gradient(left, rgba(164,179,87,1) 0%, rgba(117,137,12,1) 100%);
        background: -webkit-gradient(left top, right top, color-stop(0%, rgba(164,179,87,1)), color-stop(100%, rgba(117,137,12,1)));
        background: -webkit-linear-gradient(left, rgba(164,179,87,1) 0%, rgba(117,137,12,1) 100%);
        background: -o-linear-gradient(left, rgba(164,179,87,1) 0%, rgba(117,137,12,1) 100%);
        background: -ms-linear-gradient(left, rgba(164,179,87,1) 0%, rgba(117,137,12,1) 100%);
        background: linear-gradient(to right, rgba(164,179,87,1) 0%, rgba(117,137,12,1) 100%);
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#a4b357', endColorstr='#75890c', GradientType=1 );
    }

    .mb-3, .my-3 {
        margin-bottom: 1rem !important;
    }

    .card.widget {
        box-shadow: 0 0.46875rem 2.1875rem rgba(4, 9, 20, 0.03), 0 0.9375rem 1.40625rem rgba(4, 9, 20, 0.03), 0 0.25rem 0.53125rem rgba(4, 9, 20, 0.05), 0 0.125rem 0.1875rem rgba(4, 9, 20, 0.03);
        border-width: 0;
        transition: all .2s;
    }

        .card.widget.mb-3 {
            margin-bottom: 30px !important;
        }

    .card-header {
        padding: 0.75rem 1.25rem;
        margin-bottom: 0;
        color: inherit;
        background-color: #fff;
        border-bottom: 1px solid rgba(26, 54, 126, 0.125);
    }

    .card-header, .card-title {
        text-transform: uppercase;
        color: rgba(13, 27, 62, 0.7);
        font-weight: bold;
        font-size: 0.88rem;
    }

    .card-header {
        display: flex;
        align-items: center;
        border-bottom-width: 1px;
        padding-top: 0;
        padding-bottom: 0;
        padding-right: 0.625rem;
        height: 3.5rem;
    }

        .card-header:first-child {
            border-radius: calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0;
        }

    .text-capitalize {
        text-transform: capitalize !important;
    }

    .font-weight-normal {
        font-weight: 400 !important;
    }

    .font-size-lg {
        font-size: 1.1rem !important;
    }

    .card-header.card-header-tab .card-header-title {
        display: flex;
        align-items: center;
        white-space: nowrap;
    }
    /*.icon-gradient {
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        text-fill-color: transparent;
    }
    .bg-malibu-beach {
        background-image: linear-gradient(to right, #4facfe 0%, #00f2fe 100%) !important;
    }
    .card-header .header-icon {
        font-size: 1.65rem;
        margin-right: 0.625rem;
    }*/
    .scroll-area-lg {
        max-height: 375px;
        min-height: 200px;
        overflow-x: hidden;
    }

    perfect-scrollbar {
        position: relative;
        display: block;
        overflow: hidden;
        width: 100%;
        height: 100%;
        max-width: 100%;
        max-height: 100%;
    }

    .ps {
        overflow: hidden !important;
        overflow-anchor: none;
        -ms-overflow-style: none;
        touch-action: auto;
        -ms-touch-action: auto;
    }

    perfect-scrollbar > .ps {
        position: static;
        display: block;
        width: inherit;
        height: inherit;
        max-width: inherit;
        max-height: inherit;
    }

    .list-group {
        display: flex;
        flex-direction: column;
        padding-left: 0;
        margin-bottom: 0;
    }

    .list-group-item {
        position: relative;
        display: block;
        padding: 0.75rem 1.25rem;
        margin-bottom: -1px;
        background-color: #fff;
        border: 1px solid rgba(0, 0, 0, 0.125);
    }

        .list-group-item:first-child {
            border-top-left-radius: 0.25rem;
            border-top-right-radius: 0.25rem;
        }

    .list-group-flush .list-group-item {
        border-right: 0;
        border-left: 0;
        border-radius: 0;
    }

    .list-group-flush:first-child .list-group-item:first-child {
        border-top: 0;
    }

    .bg-warning {
        background-color: #f7b924 !important;
    }

    .todo-list-wrapper .todo-indicator {
        position: absolute;
        width: 4px;
        height: 60%;
        border-radius: 0.3rem;
        left: 0.625rem;
        top: 20%;
        opacity: .6;
        transition: opacity .2s;
    }

    .widget-content .widget-content-wrapper {
        display: flex;
        flex: 1;
        position: relative;
        align-items: center;
    }

    .flex2 {
        flex: 2;
    }

    .widget-content .widget-content-left .widget-heading {
        opacity: .8;
        font-weight: bold;
    }

    .widget-content .widget-content-left .widget-subheading {
        opacity: .5;
    }

    .ml-3, .mx-3 {
        margin-left: 1rem !important;
    }

    .widget-content .widget-content-right {
        margin-left: auto;
    }

    .badge-success {
        color: #fff;
        background-color: #3ac47d;
    }

    .badge {
        font-weight: bold;
        text-transform: uppercase;
        padding: 5px 10px;
        min-width: 19px;
    }

    .bg-primary, .badge-primary {
        background-color: #3f6ad8 !important;
    }

    .bg-info, .badge-info {
        background-color: #16aaff !important;
    }

    .bg-warning, .badge-warning {
        background-color: #f7b924 !important;
    }

    .bg-focus, .badge-focus {
        background-color: #444054 !important;
    }

    .bg-success, .badge-success {
        background-color: #3ac47d !important;
    }

    .bg-danger, .badge-danger {
        background-color: #d92550 !important;
    }

    .text-capitalize {
        text-transform: capitalize !important;
    }

    .btn-actions-pane-right {
        margin-left: auto;
        white-space: nowrap;
    }


    .btn {
        display: inline-block;
        font-weight: 400;
        color: #495057;
        text-align: center;
        vertical-align: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        background-color: transparent;
        border: 1px solid transparent;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        line-height: 1.5;
        border-radius: 0.25rem;
        transition: color 0.15s, background-color 0.15s, border-color 0.15s, box-shadow 0.15s;
    }

    .btn-link {
        font-weight: 400;
        color: #3f6ad8;
    }

    a, button, .btn {
        outline: none !important;
    }

    .btn {
        font-size: 0.8rem;
        font-weight: 500;
    }

    .btn-icon {
        vertical-align: bottom;
    }

    .btn {
        position: relative;
        transition: color 0.15s, background-color 0.15s, border-color 0.15s, box-shadow 0.15s;
    }

    
    .btn:not(:disabled):not(.disabled) {
        cursor: pointer;
    }

    .btn-icon.btn-link {
        text-decoration: none;
    }
    
    .actions-icon-btn .btn-icon-only {
        padding-left: 0;
        padding-right: 0;
        color: #495057;
    }

    .widget .dropdown-toggle::after {
        display: none !important;
    }

    .widget .dropdown-toggle {
        font-size: large;
    }
    .shadow-overflow {
        position: relative;
    }
    .shadow-overflow::after, .shadow-overflow::before {
            width: 100%;
            bottom: auto;
            top: 0;
            left: 0;
            height: 1.5rem;
            position: absolute;
            z-index: 13;
            content: '';
            background: linear-gradient(to bottom, white 20%, rgba(255, 255, 255, 0) 100%);
            filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#00ffffff', GradientType=0);
    }

    .widget .card-footer {
        padding: 0.75rem 1.25rem;
        background-color: #fff;
        border-top: 1px solid rgba(26, 54, 126, 0.125);
    }
        .widget .card-footer:last-child {
            border-radius: 0 0 calc(0.25rem - 1px) calc(0.25rem - 1px);
        }
    .widget.card .card-footer {
        display: flex;
        align-items: center;
    }
    .widget .card-header .header-icon {
        font-size: 1.85rem;
        margin-right: 0.625rem;
    }
    .icon-gradient {
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        text-fill-color: transparent;
    }

    .bg-malibu-beach {
        background-image: linear-gradient(to right, #4facfe 0%, #00f2fe 100%) !important;
    }

    .bg-amy-crisp {
        background-image: linear-gradient(120deg, #a6c0fe 0%, #f68084 100%) !important;
    }

    .bg-happy-itmeo {
        background-image: linear-gradient(180deg, #2af598 0%, #009efd 100%) !important;
    }


</style>
<div class="card">
    <div class="card-body">
        <div class="row">

            <div class="col-xl-3 col-md-6">

                <div class="card bg-c-yellow update-card link-action-tigger" data-target="/HcmDashboard/Index">
                    <div class="card-block">
                        <div class="row align-items-end">
                            <div class="col-8">
                                <h4 class="text-white">&nbsp;</h4>
                                <h6 class="text-white m-b-0">HCM Request</h6>
                            </div>
                            <div class="col-4 text-right">
                                <i class="mdi mdi-spotlight main-icon"></i>
                            </div>
                        </div>
                    </div>
                </div>

            </div>

            @if (adminUsers > 0)
            {

                <div class="col-xl-3 col-md-6">

                    <div class="card bg-c-pink update-card link-action-tigger" data-target="/HcmDashboard/HCMApprovalInbox">
                        <div class="card-block">
                            <div class="row align-items-end">
                                <div class="col-8">
                                    <h4 class="text-white">&nbsp;</h4>
                                    <h6 class="text-white m-b-0">HCM Approval Inbox</h6>
                                </div>
                                <div class="col-4 text-right">
                                    <i class="mdi mdi-altimeter main-icon"></i>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>


                <div class="col-xl-3 col-md-6">

                    <div class="card bg-c-green update-card link-action-tigger" data-target="/NeuUserManagement/Index">
                        <div class="card-block">
                            <div class="row align-items-end">
                                <div class="col-8">
                                    <h4 class="text-white">&nbsp;</h4>
                                    <h6 class="text-white m-b-0">Update User Data</h6>
                                </div>
                                <div class="col-4 text-right">
                                    <i class="mdi mdi-account-card-details main-icon"></i>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="col-xl-3 col-md-6">

                    <div class="card bg-c-dark-green-1 update-card link-action-tigger-tab" data-target="/Analytics/Index">
                        <div class="card-block">
                            <div class="row align-items-end">
                                <div class="col-8">
                                    <h4 class="text-white">&nbsp;</h4>
                                    <h6 class="text-white m-b-0">Analytics</h6>
                                </div>
                                <div class="col-4 text-right">
                                    <i class="mdi mdi-chart-areaspline main-icon"></i>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

            }




        </div>

        <div class="row">
            <div class="col-sm-12 col-lg-6">
                <div class="card-hover-shadow-2x mb-3 card widget">

                    <div class="card-header-tab card-header">
                        <div class="card-header-title font-size-lg text-capitalize font-weight-normal">
                            <i class="lnr lnr-inbox header-icon icon-gradient bg-malibu-beach mr-2"></i>
                            Your Requests
                        </div>
                        <div class="btn-actions-pane-right text-capitalize actions-icon-btn dropdown">
                            <button class="btn btn-icon btn-icon-only btn-link dropdown-toggle link-action-tigger-tab" data-target="/HcmDashboard/Index">
                                <i class="mdi mdi-exit-to-app"></i>
                            </button>
                        </div>
                    </div>

                    <div class="scroll-area-lg">
                        <perfect-scrollbar class="ps-show-limits shadow-overflow">
                            <div class="ps ps--active-y ">
                                <div class="ps-content">
                                    <ul class="todo-list-wrapper list-group list-group-flush">

                                        @foreach (UserRequestUiGridRender item in userSelfRequests)
                                        {
                                            statusRowString = "";
                                            requestTypeString = "";
                                            string sideBarClass = "";

                                            if (item.RequestStatus.ToString().ToLower() == "close")
                                            {
                                                statusRowString = "<i class=\"mdi mdi-checkbox-blank-circle text-dark\" data-toggle=\"tooltip\" data-placement=\"top\" data-original-title=\"" + item.RequestStatus.ToString() + "\"></i> <span class=\"hide\">Close</span>";
                                                statusRowString = "<div class=\"badge badge-pill badge-focus\">Close</div>";
                                                sideBarClass = "focus";
                                            }
                                            else if (item.RequestStatus.ToString().ToLower() == "withdraw")
                                            {
                                                statusRowString = "<i class=\"mdi mdi-checkbox-blank-circle text-danger\" data-toggle=\"tooltip\" data-placement=\"top\" data-original-title=\"" + item.RequestStatus.ToString() + "\"></i> <span class=\"hide\">Withdraw</span>";
                                                statusRowString = "<div class=\"badge badge-pill badge-danger\">Withdraw</div>";
                                                sideBarClass = "danger";
                                            }
                                            else if (item.RequestStatus.ToString().ToLower() == "created")
                                            {
                                                statusRowString = "<i class=\"mdi mdi-checkbox-blank-circle text-primary\" data-toggle=\"tooltip\" data-placement=\"top\" data-original-title=\"" + item.RequestStatus.ToString() + "\"></i> <span class=\"hide\">Created</span>";
                                                statusRowString = "<div class=\"badge badge-pill badge-primary\">Created</div>";
                                                sideBarClass = "primary";
                                            }
                                            else if (item.RequestStatus.ToString().ToLower() == "in_approval")
                                            {
                                                statusRowString = "<i class=\"mdi mdi-checkbox-blank-circle text-warning\" data-toggle=\"tooltip\" data-placement=\"top\" data-original-title=\"" + item.RequestStatus.ToString() + "\"></i> <span class=\"hide\">In Approval</span>";
                                                statusRowString = "<div class=\"badge badge-pill badge-warning\">In Approval</div>";
                                                sideBarClass = "warning";
                                            }
                                            else if (item.RequestStatus.ToString().ToLower() == "completed")
                                            {
                                                statusRowString = "<i class=\"mdi mdi-checkbox-blank-circle text-success\"  data-toggle=\"tooltip\" data-placement=\"top\" data-original-title=\"" + item.RequestStatus.ToString() + "\"></i> <span class=\"hide\">Completed</span>";
                                                statusRowString = "<div class=\"badge badge-pill badge-success\">Completed</div>";
                                                sideBarClass = "success";
                                            }

                                            if (item.RequestSubType.ToString().ToLower() == "leavecancelation")
                                            {
                                                requestTypeString = "Leave Cancelation";
                                            }
                                            else if (item.RequestSubType.ToString().ToLower() == "leavepastapply")
                                            {
                                                requestTypeString = "Past Leave Apply";
                                            }
                                            else if (item.RequestSubType.ToString().ToLower() == "leavewfhapply")
                                            {
                                                requestTypeString = "WFH Leave Apply";
                                            }
                                            else if (item.RequestSubType.ToString().ToLower() == "leavebalanceenquiry")
                                            {
                                                requestTypeString = "Leave Balance Enquiry";
                                            }
                                            else if (item.RequestSubType.ToString().ToLower() == "hcmaddressproof")
                                            {
                                                requestTypeString = "Address Proof Request";
                                            }
                                            else if (item.RequestSubType.ToString().ToLower() == "hcmemployeeverification")
                                            {
                                                requestTypeString = "Employee Verification";
                                            }
                                            else if (item.RequestSubType.ToString().ToLower() == "salarycertificate")
                                            {
                                                requestTypeString = "Salary Certificate";
                                            }
                                            else if (item.RequestSubType.ToString().ToLower() == "hcmgeneral")
                                            {
                                                requestTypeString = "General";
                                            }

                                            <li class="list-group-item cursor-pointer link-action-tigger-tab" data-target="/HcmDashboard/SelfRequestDetails?requestId=@item.RequestId">
                                                <div class="todo-indicator bg-@sideBarClass"></div>
                                                <div class="widget-content p-0">
                                                    <div class="widget-content-wrapper">
                                                        <div class="widget-content-left flex2"><div class="widget-heading">@requestTypeString</div><div class="widget-subheading">@item.RequestId</div></div>
                                                        <div class="widget-content-right ml-3">@Html.Raw(@statusRowString)</div>
                                                    </div>
                                                </div>
                                            </li>
                                        }




                                    </ul>
                                </div>
                            </div>
                        </perfect-scrollbar>
                    </div>

                    <div class="card-footer"></div>

                </div>
            </div>
            <div class="col-sm-12 col-lg-6">
                <div class="card-hover-shadow-2x mb-3 card widget">

                    <div class="card-header-tab card-header">
                        <div class="card-header-title font-size-lg text-capitalize font-weight-normal">
                            <i class="lnr lnr-enter header-icon icon-gradient bg-sunny-morning mr-2"></i>
                            For Your Approval
                        </div>
                        <div class="btn-actions-pane-right text-capitalize actions-icon-btn dropdown">
                            <button class="btn btn-icon btn-icon-only btn-link dropdown-toggle link-action-tigger-tab" data-target="/HcmDashboard/ApprovalInbox">
                                <i class="mdi mdi-exit-to-app"></i>
                            </button>
                        </div>
                    </div>

                    <div class="scroll-area-lg">
                        <perfect-scrollbar class="ps-show-limits shadow-overflow">
                            <div class="ps ps--active-y">
                                <div class="ps-content">
                                    <ul class="todo-list-wrapper list-group list-group-flush">

                                        @foreach (UserRequestUiGridRender item in userApprovalfRequests)
                                        {
                                            statusRowString = "";
                                            requestTypeString = "";
                                            string sideBarClass = "";

                                            if (item.RequestStatus.ToString().ToLower() == "close")
                                            {
                                                statusRowString = "<i class=\"mdi mdi-checkbox-blank-circle text-dark\" data-toggle=\"tooltip\" data-placement=\"top\" data-original-title=\"" + item.RequestStatus.ToString() + "\"></i> <span class=\"hide\">Close</span>";
                                                statusRowString = "<div class=\"badge badge-pill badge-focus\">Close</div>";
                                                sideBarClass = "focus";
                                            }
                                            else if (item.RequestStatus.ToString().ToLower() == "withdraw")
                                            {
                                                statusRowString = "<i class=\"mdi mdi-checkbox-blank-circle text-danger\" data-toggle=\"tooltip\" data-placement=\"top\" data-original-title=\"" + item.RequestStatus.ToString() + "\"></i> <span class=\"hide\">Withdraw</span>";
                                                statusRowString = "<div class=\"badge badge-pill badge-danger\">Withdraw</div>";
                                                sideBarClass = "danger";
                                            }
                                            else if (item.RequestStatus.ToString().ToLower() == "created")
                                            {
                                                statusRowString = "<i class=\"mdi mdi-checkbox-blank-circle text-primary\" data-toggle=\"tooltip\" data-placement=\"top\" data-original-title=\"" + item.RequestStatus.ToString() + "\"></i> <span class=\"hide\">Created</span>";
                                                statusRowString = "<div class=\"badge badge-pill badge-primary\">Created</div>";
                                                sideBarClass = "primary";
                                            }
                                            else if (item.RequestStatus.ToString().ToLower() == "in_approval")
                                            {
                                                statusRowString = "<i class=\"mdi mdi-checkbox-blank-circle text-warning\" data-toggle=\"tooltip\" data-placement=\"top\" data-original-title=\"" + item.RequestStatus.ToString() + "\"></i> <span class=\"hide\">In Approval</span>";
                                                statusRowString = "<div class=\"badge badge-pill badge-warning\">In Approval</div>";
                                                sideBarClass = "warning";
                                            }
                                            else if (item.RequestStatus.ToString().ToLower() == "completed")
                                            {
                                                statusRowString = "<i class=\"mdi mdi-checkbox-blank-circle text-success\"  data-toggle=\"tooltip\" data-placement=\"top\" data-original-title=\"" + item.RequestStatus.ToString() + "\"></i> <span class=\"hide\">Completed</span>";
                                                statusRowString = "<div class=\"badge badge-pill badge-success\">Completed</div>";
                                                sideBarClass = "success";
                                            }

                                            if (item.RequestSubType.ToString().ToLower() == "leavecancelation")
                                            {
                                                requestTypeString = "Leave Cancelation";
                                            }
                                            else if (item.RequestSubType.ToString().ToLower() == "leavepastapply")
                                            {
                                                requestTypeString = "Past Leave Apply";
                                            }
                                            else if (item.RequestSubType.ToString().ToLower() == "leavewfhapply")
                                            {
                                                requestTypeString = "WFH Leave Apply";
                                            }
                                            else if (item.RequestSubType.ToString().ToLower() == "leavebalanceenquiry")
                                            {
                                                requestTypeString = "Leave Balance Enquiry";
                                            }
                                            else if (item.RequestSubType.ToString().ToLower() == "hcmaddressproof")
                                            {
                                                requestTypeString = "Address Proof Request";
                                            }
                                            else if (item.RequestSubType.ToString().ToLower() == "hcmemployeeverification")
                                            {
                                                requestTypeString = "Employee Verification";
                                            }
                                            else if (item.RequestSubType.ToString().ToLower() == "salarycertificate")
                                            {
                                                requestTypeString = "Salary Certificate";
                                            }
                                            else if (item.RequestSubType.ToString().ToLower() == "hcmgeneral")
                                            {
                                                requestTypeString = "General";
                                            }

                                            <li class="list-group-item cursor-pointer link-action-tigger-tab" data-target="/HcmDashboard/SelfRequestDetails?requestId=@item.RequestId">
                                                <div class="todo-indicator bg-@sideBarClass"></div>
                                                <div class="widget-content p-0">
                                                    <div class="widget-content-wrapper">
                                                        <div class="widget-content-left flex2">
                                                            <div class="widget-heading">@requestTypeString</div>
                                                            <div class="widget-subheading">by @item.FullName (@item.NTPLID) - @item.RequestId</div>
                                                        </div>
                                                        <div class="widget-content-right ml-3">@Html.Raw(@statusRowString)</div>
                                                    </div>
                                                </div>
                                            </li>
                                        }




                                    </ul>
                                </div>
                            </div>
                        </perfect-scrollbar>
                    </div>

                    <div class="card-footer"></div>

                </div>
            </div>
        </div>

    </div>
</div>
@Scripts.Render("~/Rebone/js")
@Scripts.Render("~/Rebone/public/js/tooltips.js")
<script>
    $(function () {

    });

</script>